{"ast":null,"code":"var _jsxFileName = \"/home/leafcoder/Workspaces/coding_temple/week_10/OAuth/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './views/login';\nimport Register from './views/register';\nimport Data from './views/data';\nimport SECRET_KEY from './config.js';\n\nlet jwt = require('jsonwebtoken');\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleLogin = async e => {\n      e.preventDefault();\n    };\n\n    this.handleRegister = async e => {\n      e.preventDefault();\n      let email = e.target.elements.email.value;\n      let password = e.target.elements.password.value;\n      const URL = \"http://127.0.0.1:5000/api/register\"; // encrypt a token with the proper payload info to send to our api\n\n      let token = jwt.sign();\n    };\n\n    this.state = {\n      logged_in: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Header, {\n      logged_in: this.state.logged_in,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Login, {\n        handleLogin: this.handleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/register\",\n      render: () => React.createElement(Register, {\n        handleRegister: this.handleRegister,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), this.state.logged_in ? React.createElement(Route, {\n      exact: true,\n      path: \"/data\",\n      render: () => React.createElement(Data, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"You're not allowed to access this page, please log in.\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/leafcoder/Workspaces/coding_temple/week_10/OAuth/frontend/src/App.js"],"names":["React","Component","Header","Switch","Route","Login","Register","Data","SECRET_KEY","jwt","require","App","constructor","handleLogin","e","preventDefault","handleRegister","email","target","elements","value","password","URL","token","sign","state","logged_in","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,UAAP,MAAuB,aAAvB;;AACA,IAAIC,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAjB;;AAIA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAC1BW,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,WARc,GAQA,MAAMC,CAAN,IAAY;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACD,KAVa;;AAAA,SAYdC,cAZc,GAYG,MAAMF,CAAN,IAAY;AAC3BA,MAAAA,CAAC,CAACC,cAAF;AAEA,UAAIE,KAAK,GAAGH,CAAC,CAACI,MAAF,CAASC,QAAT,CAAkBF,KAAlB,CAAwBG,KAApC;AACA,UAAIC,QAAQ,GAAGP,CAAC,CAACI,MAAF,CAASC,QAAT,CAAkBE,QAAlB,CAA2BD,KAA1C;AAEA,YAAME,GAAG,GAAG,oCAAZ,CAN2B,CAQ3B;;AACA,UAAIC,KAAK,GAAGd,GAAG,CAACe,IAAJ,EAAZ;AAGD,KAxBa;;AAGZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAoBDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,MAAM,EAAE,MAAM,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAE,KAAKb,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,MAAM,EAAE,MAAM,oBAAC,QAAD;AAAU,QAAA,cAAc,EAAE,KAAKG,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAMI,KAAKS,KAAL,CAAWC,SAAX,GACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,MAAM,EAAE,MAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEARN,CADF,CAFF,CADF;AAkBD;;AA9CyB;;AAiD5B,eAAef,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './views/login';\nimport Register from './views/register';\nimport Data from './views/data';\nimport SECRET_KEY from './config.js';\nlet jwt = require('jsonwebtoken');\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      logged_in: false,\n    }\n  }\n\n  handleLogin = async(e) => {\n    e.preventDefault();\n  }\n\n  handleRegister = async(e) => {\n    e.preventDefault();\n\n    let email = e.target.elements.email.value;\n    let password = e.target.elements.password.value;\n\n    const URL = \"http://127.0.0.1:5000/api/register\";\n\n    // encrypt a token with the proper payload info to send to our api\n    let token = jwt.sign(\n      \n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header logged_in={this.state.logged_in} />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path='/' render={() => <Login handleLogin={this.handleLogin} />} />\n\n            <Route exact path='/register' render={() => <Register handleRegister={this.handleRegister} />} />\n\n            {\n              this.state.logged_in ?\n                <Route exact path='/data' render={() => <Data />} /> :\n                <p>You're not allowed to access this page, please log in.</p>\n            }\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}