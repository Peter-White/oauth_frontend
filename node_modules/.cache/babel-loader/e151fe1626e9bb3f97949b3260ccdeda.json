{"ast":null,"code":"var _jsxFileName = \"/home/leafcoder/Workspaces/coding_temple/week_10/OAuth/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './views/login';\nimport Register from './views/register';\nimport Data from './views/data';\nimport SECRET_KEY from './config.js';\n\nlet jwt = require('jsonwebtoken');\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleLogin = async e => {\n      e.preventDefault();\n      let email = e.target.elements.email.value;\n      let password = e.target.elements.pass.value;\n      const URL = \"http://127.0.0.1:5000/api/login\"; // encrypt a token with the proper payload info to send to our api\n\n      let token = jwt.sign({\n        'email': email,\n        'password': password\n      }, SECRET_KEY, {\n        expiresIn: '1h' // expires in 1 hour\n\n      }); // send the token to register the user\n\n      let response = await fetch(URL, {\n        headers: {\n          'Content-Type': 'application/json',\n          'token': token\n        }\n      });\n      let data = await response.json(); // setup message saying register or error\n\n      if (data.message === 'success') {\n        alert('Your are now logged in!');\n      } else {\n        alert(data.message);\n      }\n    };\n\n    this.handleRegister = async e => {\n      e.preventDefault();\n      let email = e.target.elements.email.value;\n      let password = e.target.elements.pass.value;\n      const URL = \"http://127.0.0.1:5000/api/register\"; // encrypt a token with the proper payload info to send to our api\n\n      let token = jwt.sign({\n        'email': email,\n        'password': password\n      }, SECRET_KEY, {\n        expiresIn: '1h' // expires in 1 hour\n\n      }); // send the token to register the user\n\n      let response = await fetch(URL, {\n        headers: {\n          'Content-Type': 'application/json',\n          'token': token\n        }\n      });\n      let data = await response.json(); // setup message saying register or error\n\n      if (data.message === 'success') {\n        alert('Your are now registered!');\n      } else {\n        alert(data.message);\n      }\n    };\n\n    this.state = {\n      logged_in: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Header, {\n      logged_in: this.state.logged_in,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Login, {\n        handleLogin: this.handleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/register\",\n      render: () => React.createElement(Register, {\n        handleRegister: this.handleRegister,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), this.state.logged_in ? React.createElement(Route, {\n      exact: true,\n      path: \"/data\",\n      render: () => React.createElement(Data, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"You're not allowed to access this page, please log in.\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/leafcoder/Workspaces/coding_temple/week_10/OAuth/frontend/src/App.js"],"names":["React","Component","Header","Switch","Route","Login","Register","Data","SECRET_KEY","jwt","require","App","constructor","handleLogin","e","preventDefault","email","target","elements","value","password","pass","URL","token","sign","expiresIn","response","fetch","headers","data","json","message","alert","handleRegister","state","logged_in","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,UAAP,MAAuB,aAAvB;;AACA,IAAIC,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAjB;;AAIA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAC1BW,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,WARc,GAQA,MAAMC,CAAN,IAAY;AACxBA,MAAAA,CAAC,CAACC,cAAF;AAEA,UAAIC,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,KAAlB,CAAwBG,KAApC;AACA,UAAIC,QAAQ,GAAGN,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBG,IAAlB,CAAuBF,KAAtC;AAEA,YAAMG,GAAG,GAAG,iCAAZ,CANwB,CAQxB;;AACA,UAAIC,KAAK,GAAGd,GAAG,CAACe,IAAJ,CACV;AAAE,iBAASR,KAAX;AAAkB,oBAAYI;AAA9B,OADU,EAEVZ,UAFU,EAGV;AAAEiB,QAAAA,SAAS,EAAE,IAAb,CAAoB;;AAApB,OAHU,CAAZ,CATwB,CAexB;;AACA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAC9BM,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,mBAASL;AAFF;AADqB,OAAN,CAA1B;AAOA,UAAIM,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAjB,CAvBwB,CAyBxB;;AACA,UAAID,IAAI,CAACE,OAAL,KAAiB,SAArB,EAAgC;AAC9BC,QAAAA,KAAK,CAAC,yBAAD,CAAL;AACD,OAFD,MAEO;AACLA,QAAAA,KAAK,CAACH,IAAI,CAACE,OAAN,CAAL;AACD;AACF,KAvCa;;AAAA,SAyCdE,cAzCc,GAyCG,MAAMnB,CAAN,IAAY;AAC3BA,MAAAA,CAAC,CAACC,cAAF;AAEA,UAAIC,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,KAAlB,CAAwBG,KAApC;AACA,UAAIC,QAAQ,GAAGN,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBG,IAAlB,CAAuBF,KAAtC;AAEA,YAAMG,GAAG,GAAG,oCAAZ,CAN2B,CAQ3B;;AACA,UAAIC,KAAK,GAAGd,GAAG,CAACe,IAAJ,CACV;AAAE,iBAASR,KAAX;AAAkB,oBAAYI;AAA9B,OADU,EAEVZ,UAFU,EAGV;AAAEiB,QAAAA,SAAS,EAAE,IAAb,CAAoB;;AAApB,OAHU,CAAZ,CAT2B,CAe3B;;AACA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAC9BM,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,mBAASL;AAFF;AADqB,OAAN,CAA1B;AAOA,UAAIM,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAjB,CAvB2B,CAyB3B;;AACA,UAAID,IAAI,CAACE,OAAL,KAAiB,SAArB,EAAgC;AAC9BC,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACD,OAFD,MAEO;AACLA,QAAAA,KAAK,CAACH,IAAI,CAACE,OAAN,CAAL;AACD;AACF,KAxEa;;AAGZ,SAAKG,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAoEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,MAAM,EAAE,MAAM,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAE,KAAKtB,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,MAAM,EAAE,MAAM,oBAAC,QAAD;AAAU,QAAA,cAAc,EAAE,KAAKoB,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAMI,KAAKC,KAAL,CAAWC,SAAX,GACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,MAAM,EAAE,MAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEARN,CADF,CAFF,CADF;AAkBD;;AA9FyB;;AAiG5B,eAAexB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './views/login';\nimport Register from './views/register';\nimport Data from './views/data';\nimport SECRET_KEY from './config.js';\nlet jwt = require('jsonwebtoken');\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      logged_in: false,\n    }\n  }\n\n  handleLogin = async(e) => {\n    e.preventDefault();\n\n    let email = e.target.elements.email.value;\n    let password = e.target.elements.pass.value;\n\n    const URL = \"http://127.0.0.1:5000/api/login\";\n\n    // encrypt a token with the proper payload info to send to our api\n    let token = jwt.sign(\n      { 'email': email, 'password': password },\n      SECRET_KEY,\n      { expiresIn: '1h' } // expires in 1 hour\n    );\n\n    // send the token to register the user\n    let response = await fetch(URL, {\n      headers: {\n        'Content-Type': 'application/json',\n        'token': token\n      }\n    });\n\n    let data = await response.json();\n\n    // setup message saying register or error\n    if (data.message === 'success') {\n      alert('Your are now logged in!');\n    } else {\n      alert(data.message);\n    }\n  }\n\n  handleRegister = async(e) => {\n    e.preventDefault();\n\n    let email = e.target.elements.email.value;\n    let password = e.target.elements.pass.value;\n\n    const URL = \"http://127.0.0.1:5000/api/register\";\n\n    // encrypt a token with the proper payload info to send to our api\n    let token = jwt.sign(\n      { 'email': email, 'password': password },\n      SECRET_KEY,\n      { expiresIn: '1h' } // expires in 1 hour\n    );\n\n    // send the token to register the user\n    let response = await fetch(URL, {\n      headers: {\n        'Content-Type': 'application/json',\n        'token': token\n      }\n    });\n\n    let data = await response.json();\n\n    // setup message saying register or error\n    if (data.message === 'success') {\n      alert('Your are now registered!');\n    } else {\n      alert(data.message);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header logged_in={this.state.logged_in} />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path='/' render={() => <Login handleLogin={this.handleLogin} />} />\n\n            <Route exact path='/register' render={() => <Register handleRegister={this.handleRegister} />} />\n\n            {\n              this.state.logged_in ?\n                <Route exact path='/data' render={() => <Data />} /> :\n                <p>You're not allowed to access this page, please log in.</p>\n            }\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}